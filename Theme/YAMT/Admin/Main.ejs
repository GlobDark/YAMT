<!DOCTYPE html>
<html>

<%- include('../Components/Header.ejs') %>
<%- include('../Routers/Navigation.ejs') %>

<body>

    <section class="home">

        <nav class="navbar-primary">
            <div class="btns">
                <a class="coins-user" href="#"> Coins: <span id="balance"></span> </a>
                <a class="create-server" href="#"> New Server </a>
                <p><code>v<%= settings.version.replace(/"/g, `\\\\"`) %></code></p>
            </div>

            <script>
                let balance = document.getElementById("balance")
                balance.textContent = Math.floor(<%= coins %> * 100) / 100
            </script>
        </nav>

        <main>
            <div class="fluid">

                <% if (req.query.code) { %>
                <div style="background-color: #fff; color: black; padding: 11px; border-radius: 3px; margin: 20px 40px;" class="alert">
                    You have created a coupon code with the name of: <%= req.query.code
                    %>                       
                    </div><br>
                    <% } %>

                <div class="card-admin flex-fill w-100">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Admin</h5>
                    </div>
                    <div class="card-body-admin">
                        <h1>Add coins</h1><br>
                        <form class="form-group" action="/addcoins">
                            <label for="id">Discord ID:</label>
                            <input class="form-control" name="id" placeholder="0000000000000000"><br><br>
                            <label for="coins">Coins:</label>
                            <input class="form-control" name="coins" placeholder="100" type="number"><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form><br>
                        <h1>Set coins</h1><br>
                        <form class="form-group" action="/setcoins">
                            <label for="id">Discord ID:</label>
                            <input class="form-control" name="id" placeholder="0000000000000000"><br><br>
                            <label for="coins">Coins:</label>
                            <input class="form-control" name="coins" placeholder="100" type="number"><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form><br>
                        <h1>Add resources</h1><br>
                        <form class="form-group" action="/addresources">
                            <label for="id">Discord ID:</label>
                            <input class="form-control" name="id" placeholder="0000000000000000"><br><br>
                            <label for="cpu">CPU:</label>
                            <input class="form-control" name="cpu" placeholder="50" type="number"><br><br>
                            <label  for="ram">RAM:</label>
                            <input class="form-control" name="ram" placeholder="1024" type="number"><br><br>
                            <label for="disk">Disk:</label>
                            <input class="form-control" name="disk" placeholder="5120" type="number"><br><br>
                            <label for="disk">Servers:</label>
                            <input  class="form-control" name="servers" placeholder="2" type="number"><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form><br>
                        <h1>Set resources</h1><br>
                        <form class="form-group" action="/setresources">
                            <label for="id">Discord ID:</label>
                            <input class="form-control" name="id" placeholder="0000000000000000"><br><br>
                            <label for="cpu">CPU:</label>
                            <input class="form-control" name="cpu" placeholder="50" type="number"><br><br>
                            <label for="ram">RAM:</label>
                            <input class="form-control" name="ram" placeholder="1024" type="number"><br><br>
                            <label for="disk">Disk:</label>
                            <input class="form-control" name="disk" placeholder="5120" type="number"><br><br>
                            <label for="disk">Servers:</label>
                            <input class="form-control" name="servers" placeholder="2" type="number"><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form><br>
                        <h1>Create coupon</h1><br>
                        <form class="form-group" action="/create_coupon">
                            <label for="id">Code:</label>
                            <input class="form-control" name="code" placeholder="Leave this empty to generate a random code"><br><br>
                            <label for="coins">Coins:</label>
                            <input class="form-control" name="coins" placeholder="100" type="number"><br><br>
                            <label for="cpu">CPU:</label>
                            <input class="form-control" name="cpu" placeholder="50" type="number"><br><br>
                            <label for="ram">RAM:</label>
                            <input class="form-control" name="ram" placeholder="1024" type="number"><br><br>
                            <label for="disk">Disk:</label>
                            <input class="form-control" name="disk" placeholder="5120" type="number"><br><br>
                            <label for="disk">Servers:</label>
                            <input class="form-control" name="servers" placeholder="2" type="number"><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form><br>
                        <h1>Revoke coupon</h1><br>
                        <form class="form-group" action="/revoke_coupon">
                            <label for="id">Code:</label>
                            <input class="form-control" name="code" placeholder="EXAMPLE100"><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form><br>
                        <h1>Set plan</h1><br>
                        <form class="form-group" action="/setplan">
                            <label for="id">Discord ID:</label>
                            <input class="form-control" name="id" placeholder="0000000000000000"><br><br>
                            <label for="package">Plan:</label>
                            <select class="form-control"  name="package">
                                <% for (let [name, value] of Object.entries(settings.api.client.packages.list)) { %>
                                <option value="<%= name %>"><%= name %> (RAM: <%= value.ram %>MB, Disk: <%= value.disk %>MB, CPU: <%= value.cpu %>%, Servers: <%= value.servers %>)</option>
                                <% } %>
                            </select><br><br>
                            <button class="btn btn-edit" type="submit">Complete action</button>
                        </form>
                    </div>
                </div>
            </div>
        </main>

        <script>
            async function submitPlan() {
                let id = encodeURIComponent(document.getElementById("IDPlan").value);
                let packagename = encodeURIComponent(document.getElementById("package").value);
                window.location.href = "/setplan?id=" + id + "&package=" + packagename
            }
            async function submitSet() {
                let id = encodeURIComponent(document.getElementById("IDSet").value);
                let cpu = encodeURIComponent(document.getElementById("SetCPU").value);
                let ram = encodeURIComponent(document.getElementById("SetRAM").value);
                let disk = encodeURIComponent(document.getElementById("SetDisk").value);
                let servers = encodeURIComponent(document.getElementById("SetServers").value);
                window.location.href = "/setresources?id=" + id + "&cpu=" + cpu + "&ram=" + ram + "&disk=" + disk + "&servers=" + servers
            }
            async function submitAdd() {
                let id = encodeURIComponent(document.getElementById("IDAdd").value);
                let cpu = encodeURIComponent(document.getElementById("AddCPU").value);
                let ram = encodeURIComponent(document.getElementById("AddRAM").value);
                let disk = encodeURIComponent(document.getElementById("AddDisk").value);
                let servers = encodeURIComponent(document.getElementById("AddServers").value);
                window.location.href = "/addresources?id=" + id + "&cpu=" + cpu + "&ram=" + ram + "&disk=" + disk + "&servers=" + servers
            }
            async function submitRemove() {
                let id = encodeURIComponent(document.getElementById("IDRemove").value);
                let cpu = encodeURIComponent(document.getElementById("RemoveCPU").value);
                let ram = encodeURIComponent(document.getElementById("RemoveRAM").value);
                let disk = encodeURIComponent(document.getElementById("RemoveDisk").value);
                let servers = encodeURIComponent(document.getElementById("RemoveServers").value);
                window.location.href = "/removeresources?id=" + id + "&cpu=" + cpu + "&ram=" + ram + "&disk=" + disk + "&servers=" + servers
            }
        </script>

    </section>

    <script src="../assets/js/app.js"></script>
    <script src="../assets/js/sidebar.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
            var gradient = ctx.createLinearGradient(0, 0, 0, 225);
            gradient.addColorStop(0, "rgba(215, 227, 244, 1)");
            gradient.addColorStop(1, "rgba(215, 227, 244, 0)");
            // Line chart
            new Chart(document.getElementById("chartjs-dashboard-line"), {
                type: "line",
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    datasets: [{
                        label: "Sales ($)",
                        fill: true,
                        backgroundColor: gradient,
                        borderColor: window.theme.primary,
                        data: [
                            2115,
                            1562,
                            1584,
                            1892,
                            1587,
                            1923,
                            2566,
                            2448,
                            2805,
                            3438,
                            2917,
                            3327
                        ]
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    legend: {
                        display: false
                    },
                    tooltips: {
                        intersect: false
                    },
                    hover: {
                        intersect: true
                    },
                    plugins: {
                        filler: {
                            propagate: false
                        }
                    },
                    scales: {
                        xAxes: [{
                            reverse: true,
                            gridLines: {
                                color: "rgba(0,0,0,0.0)"
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                stepSize: 1000
                            },
                            display: true,
                            borderDash: [3, 3],
                            gridLines: {
                                color: "rgba(0,0,0,0.0)"
                            }
                        }]
                    }
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Pie chart
            new Chart(document.getElementById("chartjs-dashboard-pie"), {
                type: "pie",
                data: {
                    labels: ["Chrome", "Firefox", "IE"],
                    datasets: [{
                        data: [4306, 3801, 1689],
                        backgroundColor: [
                            window.theme.primary,
                            window.theme.warning,
                            window.theme.danger
                        ],
                        borderWidth: 5
                    }]
                },
                options: {
                    responsive: !window.MSInputMethodContext,
                    maintainAspectRatio: false,
                    legend: {
                        display: false
                    },
                    cutoutPercentage: 75
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Bar chart
            new Chart(document.getElementById("chartjs-dashboard-bar"), {
                type: "bar",
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    datasets: [{
                        label: "This year",
                        backgroundColor: window.theme.primary,
                        borderColor: window.theme.primary,
                        hoverBackgroundColor: window.theme.primary,
                        hoverBorderColor: window.theme.primary,
                        data: [54, 67, 41, 55, 62, 45, 55, 73, 60, 76, 48, 79],
                        barPercentage: .75,
                        categoryPercentage: .5
                    }]
                },
                options: {
                    maintainAspectRatio: false,
                    legend: {
                        display: false
                    },
                    scales: {
                        yAxes: [{
                            gridLines: {
                                display: false
                            },
                            stacked: false,
                            ticks: {
                                stepSize: 20
                            }
                        }],
                        xAxes: [{
                            stacked: false,
                            gridLines: {
                                color: "transparent"
                            }
                        }]
                    }
                }
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var markers = [{
                    coords: [31.230391, 121.473701],
                    name: "Shanghai"
                },
                {
                    coords: [28.704060, 77.102493],
                    name: "Delhi"
                },
                {
                    coords: [6.524379, 3.379206],
                    name: "Lagos"
                },
                {
                    coords: [35.689487, 139.691711],
                    name: "Tokyo"
                },
                {
                    coords: [23.129110, 113.264381],
                    name: "Guangzhou"
                },
                {
                    coords: [40.7127837, -74.0059413],
                    name: "New York"
                },
                {
                    coords: [34.052235, -118.243683],
                    name: "Los Angeles"
                },
                {
                    coords: [41.878113, -87.629799],
                    name: "Chicago"
                },
                {
                    coords: [51.507351, -0.127758],
                    name: "London"
                },
                {
                    coords: [40.416775, -3.703790],
                    name: "Madrid "
                }
            ];
            var map = new jsVectorMap({
                map: "world",
                selector: "#world_map",
                zoomButtons: true,
                markers: markers,
                markerStyle: {
                    initial: {
                        r: 9,
                        strokeWidth: 7,
                        stokeOpacity: .4,
                        fill: window.theme.primary
                    },
                    hover: {
                        fill: window.theme.primary,
                        stroke: window.theme.primary
                    }
                },
                zoomOnScroll: false
            });
            window.addEventListener("resize", () => {
                map.updateSize();
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var date = new Date(Date.now() - 5 * 24 * 60 * 60 * 1000);
            var defaultDate = date.getUTCFullYear() + "-" + (date.getUTCMonth() + 1) + "-" + date.getUTCDate();
            document.getElementById("datetimepicker-dashboard").flatpickr({
                inline: true,
                prevArrow: "<span title=\"Previous month\">&laquo;</span>",
                nextArrow: "<span title=\"Next month\">&raquo;</span>",
                defaultDate: defaultDate
            });
        });
    </script>

</body>
</html>